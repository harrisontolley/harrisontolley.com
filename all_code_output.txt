

# --- ./index.html ---
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>harrisontolley.com ‚Äì Blog</title>

    <!-- Styles -->
    <link rel="stylesheet" href="css/styles.css">

    <!-- JS libs (markdown-it/MathJax still used by the post page) -->
    <script src="https://cdn.jsdelivr.net/npm/markdown-it/dist/markdown-it.min.js" defer></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head>

<body>
    <div class="layout">
        <!-- Left & right ‚Äúborders‚Äù -->
        <div class="sidebar side-left"></div>

        <main class="content">
            <header class="site-header">
                <h1><a href="index.html">harrisontolley.com</a></h1>

                <!-- social / contact -->
                <nav class="social-links">
                    <a href="https://github.com/harrisontolley" target="_blank">GitHub</a>
                    <span>¬∑</span>
                    <a href="https://www.linkedin.com/in/harrison-tolley/" target="_blank">LinkedIn</a>
                    <span>¬∑</span>
                    <a href="mailto:you@domain.com">Email me</a>
                </nav>

                <div class="controls">
                    <div class="controls-left">
                        <span class="filter-label">Filters:</span>
                        <div id="category-filters" class="filter-chips"><!-- chips injected here --></div>
                    </div>

                    <button id="sort-toggle" class="sort-btn" aria-label="Toggle sort order">
                        <svg class="arrow" width="16" height="16" viewBox="0 0 16 16">
                            <path d="M2 6l6 6 6-6" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                    </button>
                </div>
            </header>

            <ul id="post-list" class="post-list"></ul>
        </main>

        <div class="sidebar side-right"></div>
    </div>

    <script src="js/site.js" defer></script>
</body>

</html>

# --- ./posts.json ---
[
    {
        "title": "My First Post",
        "date": "2025-07-01",
        "categories": [
            "Philosophy",
            "Math"
        ],
        "filename": "2025-07-01-first-post.md",
        "blurb": "A quick proof of \\(e^{i\\pi}+1=0\\)."
    },
    {
        "title": "Another Test Post",
        "date": "2025-06-12",
        "categories": [
            "Tech"
        ],
        "filename": "2025-06-12-another-post.md",
        "blurb": "Comparing vanilla JS to Eleventy."
    },
    {
        "title": "Euler‚Äôs Identity & Why It Matters",
        "date": "2025-07-15",
        "categories": [
            "Math"
        ],
        "filename": "2025-07-15-math-video-test.md",
        "blurb": "Visual intuition for \\(e^{i\\pi}\\).",
        "pinned": true
    }
]

# --- ./post.html ---
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Loading‚Ä¶ ‚Äî harrisontolley.com</title>

    <link rel="stylesheet" href="css/styles.css">

    <script src="https://cdn.jsdelivr.net/npm/markdown-it/dist/markdown-it.min.js" defer></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
</head>

<body>
    <div class="layout">
        <div class="sidebar side-left"></div>

        <main class="content">
            <!-- same title block as the home page -->
            <header class="site-header">
                <h1><a href="index.html">harrisontolley.com</a></h1>
            </header>

            <!-- post container -->
            <article id="post-container">
                <!-- filled by JS -->
                <h2 id="post-title" class="post-title">Loading‚Ä¶</h2>

                <div class="post-meta"></div>
                <div id="post-body" class="post-body">Please wait ‚Ä¶</div>
            </article>
        </main>

        <div class="sidebar side-right"></div>
    </div>

    <script src="js/article.js" defer></script>
</body>

</html>

# --- ./js/site.js ---
(async () => {
  const posts = await fetch('./posts.json').then(r => r.json());

  /* ----------  build unique category list  ---------- */
  const allCats = [...new Set(posts.flatMap(p => p.categories || []))].sort();
  const catWrap = document.getElementById('category-filters');

  const selected = new Set();        // current filters

  allCats.forEach(cat => {
    const div = document.createElement('div');
    div.className = 'chip';
    div.textContent = cat;
    div.addEventListener('click', () => {
      if (selected.has(cat)) selected.delete(cat);
      else                    selected.add(cat);
      div.classList.toggle('selected');
      render();
    });
    catWrap.appendChild(div);
  });

  /* ----------  sort button  ---------- */
  const sortBtn = document.getElementById('sort-toggle');
  let asc = false;                   // newest‚Üíoldest by default
  sortBtn.addEventListener('click', () => {
    asc = !asc;
    sortBtn.classList.toggle('asc', asc);
    render();
  });

  /* ----------  rendering  ---------- */
  const listEl = document.getElementById('post-list');
  const md     = window.markdownit({html:true});

  function passesFilter(p){
    if (selected.size === 0) return true;
    return (p.categories||[]).some(c => selected.has(c));
  }

  function cmp(a,b){
    return asc
      ? new Date(a.date) - new Date(b.date)
      : new Date(b.date) - new Date(a.date);
}

  function render(){
    listEl.innerHTML = '';

    const visible = posts.filter(passesFilter);
    const pinned = visible.filter(p => p.pinned);
    const unpinned = visible.filter(p => !p.pinned).sort(cmp);

    [...pinned, ...unpinned].forEach(p => {
      const li = document.createElement('li');
      const blurbHtml = md.renderInline(p.blurb);

      li.innerHTML = `
        <div class="post-header">
          <a class="post-title"
              href="post.html?file=${encodeURIComponent(p.filename)}">
            ${p.title}
          </a>
          ${p.pinned
            ? '<span class="pin-badge">üìå Pinned</span>'
            : ''}
        </div>
        <div class="post-meta">${p.date} ‚Ä¢ ${(p.categories||[]).join(', ')}</div>
        <p class="post-blurb">${blurbHtml}</p>
      `;
      listEl.appendChild(li);
    });


    if (window.MathJax && MathJax.typesetPromise) {
      MathJax.typesetClear && MathJax.typesetClear();   // clear previous
      MathJax.typesetPromise();
    }
  }

  render();
})();


# --- ./js/article.js ---
(async () => {
  /* -------------  Locate the .md file requested  ------------- */
  const file = new URLSearchParams(location.search).get('file');
  if (!file) {
    document.body.innerHTML = '<p style="padding:2rem">Post not specified.</p>';
    return;
  }

  /* -------------  Fetch and split front-matter  ------------- */
  const resp = await fetch(`posts/${file}`);
  if (!resp.ok) {
    document.body.innerHTML = `<p style="padding:2rem">Could not load post (${resp.status}).</p>`;
    return;
  }
  const raw = await resp.text();
  const [, fm = '', body = raw] = raw.match(/^---([\s\S]+?)---\s*([\s\S]*)$/) || [];

  const meta = Object.fromEntries(
    fm.split('\n').filter(Boolean).map(line => {
      const [, k, v] = line.match(/^([a-zA-Z0-9_-]+):\s*"?(.+?)"?$/) || [];
      return [k, v];
    })
  );

  /* -------------  Fill in the header  ------------- */
  const fullTitle = meta.title || 'Untitled';
  document.title         = `${fullTitle} ‚Äî harrisontolley.com`;
  document.getElementById('post-title').textContent = fullTitle;

  const date = meta.date ? new Date(meta.date).toISOString().slice(0,10) : '';
  const catsTxt = meta.categories ? meta.categories : meta.category || '';
  document.querySelector('.post-meta').textContent =
    date + (catsTxt ? ` ‚Ä¢ ${catsTxt}` : '');

  /* -------------  Convert Markdown to HTML  ------------- */
  const md = window.markdownit({ html: true, linkify: true, typographer: true });
  document.getElementById('post-body').innerHTML = md.render(body);

  /* -------------  Trigger MathJax (if present)  ------------- */
  if (window.MathJax && MathJax.typeset) MathJax.typeset();
})();


# --- ./css/styles.css ---
/* ---------------------------  Reset & core  --------------------------- */
html,
body {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: system-ui, -apple-system, 'Segoe UI', Roboto,
        Helvetica, Arial, sans-serif;
    color: #111;
}

* {
    box-sizing: border-box
}

/* ---------------------------  Layout shell  --------------------------- */
.layout {
    display: flex;
    min-height: 100vh
}

.sidebar {
    flex: 1;
    background: #e5e7eb;
    /* light-grey ‚Äúborder‚Äù */
}

.content {
    flex: 0 1 960px;
    /* centred column, max 960 px wide */
    width: 100%;
    background: #f9fafb;
    /* subtle warm grey */
    padding: 2.5rem 3rem;
    box-shadow: 0 0 25px rgba(0, 0, 0, .06);
}

/* Hide borders on phones */
@media(max-width:768px) {
    .sidebar {
        display: none
    }

    .content {
        flex: 1;
        padding: 1.25rem 1rem;
        box-shadow: none;
    }
}

/* ---------------------------  Header  --------------------------- */
.site-header {
    text-align: center;
    margin-bottom: 0.5rem;

}

.site-header h1 {
    font-size: 2.75rem;
    margin: 0;
    text-transform: lowercase;
    letter-spacing: .5px;
    text-shadow: 0 2px 4px rgba(0, 0, 0, .08);
}

.site-header h1 a {
    color: inherit;
    text-decoration: none
}

.controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: -.5rem 0 1.25rem;
    /* pull it closer to list */
    flex-wrap: wrap;
    gap: .75rem;
}

.controls-left {
    display: flex;
    align-items: center;
    gap: .5rem
}

@media(max-width:600px) {
    .controls {
        flex-direction: column;
        align-items: flex-start
    }

    .sort-btn {
        align-self: flex-end;
        margin-top: .4rem
    }
}

/* ---------------------------  Post list  --------------------------- */
.post-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem
}

.post-list li {
    background: #fff;
    border: 1px solid #e5e7eb;
    border-radius: .625rem;
    padding: 1.25rem 1.5rem;
    transition: transform .15s ease, box-shadow .15s ease;
}

.post-list li:hover {
    transform: translateY(-2px);
    box-shadow: 0 3px 10px rgba(0, 0, 0, .08);
}

.post-title {
    font-size: 1.25rem;
    color: #1e3a8a;
    text-decoration: none;
    line-height: 1.3;
    font-weight: 600;
}

.post-meta {
    font-size: .8125rem;
    color: #6b7280;
    margin: .25rem 0 .65rem;
}

.post-blurb {
    margin: 0;
    font-size: .95rem;
    color: #374151;
    line-height: 1.55
}

/* smaller, right-aligned pin badge */
.pin-badge {
    font-size: 0.7rem;
    color: #d97706;
    /* remove any previous margin-left */
    margin: 0;
}

.post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
}


/* ---------------------------  Utilities  --------------------------- */
.visually-hidden {
    position: absolute !important;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0
}

/* -------------------  Post page tweaks  ------------------- */
.post-body iframe {
    max-width: 100%;
    border: 0;
    height: 315px;
    width: 560px
}

@media(max-width:640px) {
    .post-body iframe {
        height: 200px;
        width: 100%
    }
}

.post-body h2,
h3,
h4 {
    margin-top: 2rem
}

.post-body p {
    line-height: 1.7;
    margin: .9rem 0
}


/* ----------  filter chips  ---------- */
.filter-chips {
    display: flex;
    gap: .5rem;
    flex-wrap: wrap
}

.chip {
    padding: .3rem .65rem;
    background: #fff;
    border: 1px solid #d1d5db;
    border-radius: 1rem;
    font-size: .8rem;
    cursor: pointer;
    user-select: none;
    transition: background .15s;
}

.chip.selected {
    background: #1e3a8a;
    color: #fff;
    border-color: #1e3a8a
}

/* ----------  sort button  ---------- */
.sort-btn {
    margin-left: 1rem;
    background: #fff;
    border: 1px solid #d1d5db;
    border-radius: .375rem;
    padding: .4rem .55rem;
    cursor: pointer;
}

.sort-btn .arrow {
    fill: none;
    stroke: #1e3a8a;
    stroke-width: 2;
    transition: transform .2s
}

.sort-btn.asc .arrow {
    transform: rotate(180deg)
}

.sort-btn .arrow path {
    stroke: currentColor
}

/* ----------  social links  ---------- */
.social-links {
    font-size: .9rem;
    margin: .4rem 0 1.1rem;
    letter-spacing: .3px
}

.social-links a {
    text-decoration: none;
    color: #1e3a8a
}

.social-links span {
    color: #6b7280;
    margin: 0 .25rem
}

# --- ./.vscode/extensions.json ---
{
    "recommendations": [
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "yzhang.markdown-all-in-one",
        "ritwickdey.live-server"
    ]
}

# --- ./.vscode/settings.json ---
{
    "editor.formatOnSave": true,
    "files.autoSave": "onFocusChange",
    "liveServer.settings.port": 5500
}